---
swagger: "2.0"
info:
  description: "REST API for Topcoder Submissions.\n\n### Pagination\n  Requests that\
    \ return multiple items will be paginated to 20 items by default. You can specify\n\
    \  further pages with the `page` parameter. You can also set a custom page\n \
    \ size up to 100 with the `perPage` parameter.\n\n  Pagination response data is\
    \ included in http headers. By Default, the response header contains links with\
    \ `next`, `last`, `first`, `prev` resource links.\n"
  version: "5.0.0"
  title: "Topcoder Submissions REST API"
  termsOfService: "http://topcoder.com/terms/"
  contact:
    url: "http://www.topcoder.com/support"
    email: "support@topcoder.com"
host: "api.topcoder.com"
basePath: "/v5"
tags:
- name: "Submissions"
  description: "Everything about submissions."
- name: "Review summations"
  description: "Everything about review summations."
- name: "Reviews"
  description: "Everything about reviews."
- name: "Review types"
  description: "Everything about review types."
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
security:
- Bearer: []
paths:
  /submissions:
    get:
      tags:
      - "Submissions"
      summary: "Get all submissions."
      description: "Get all submissions. Link headers are sent back and they have\
        \ rel set to prev, next, first, last and contain the relevant URL.\n\nResulted\
        \ collection of submissions can be filtered using filter parameters `type`,\
        \ `url`, `memberId`, `challengeId` (all filter parameters are optional and\
        \ combined by the logical operation `AND`).\n\n**Authorization:** Submission\
        \ is accessible by roles `topcoder user`, `admin` and `copilot`.\n"
      operationId: "getSubmissions"
      parameters:
      - name: "page"
        in: "query"
        description: "The page number."
        required: false
        type: "integer"
        default: 1
      - name: "perPage"
        in: "query"
        description: "The number of items to list per page."
        required: false
        type: "integer"
        default: 20
        maximum: 100
      - name: "type"
        in: "query"
        description: "The type filter for submissions."
        required: false
        type: "string"
      - name: "url"
        in: "query"
        description: "The url filter for submissions."
        required: false
        type: "string"
      - name: "memberId"
        in: "query"
        description: "The member id filter for submissions."
        required: false
        type: "string"
      - name: "challengeId"
        in: "query"
        description: "The challenge id filter for submissions."
        required: false
        type: "string"
      - name: "If-None-Match"
        in: "header"
        description: "Optional. If used in the request, the If-None-Match request\
          \ header should utilize the ETag as previously supplied in the response.\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Optional. In the subsequent request, the If-Modified-Since request\
          \ header can be populated with the previously retrieved `Last-Modified`.\n"
        required: false
        type: "string"
      responses:
        200:
          description: "OK - the request was successful, the submissions resource\
            \ are returned."
          schema:
            type: "array"
            example:
            - id: "f11668564ca74c265de7009b"
              type: "ContestSubmission"
              url: "https://software.topcoder.com/review/actions/DownloadContestSubmission?uid=123456"
              memberId: "d40796a325341bdb8c973656"
              challengeId: "8b1a70e7e492adc4551a0d68"
              created: "2018-05-20T07:00:30.123Z"
              updated: "2018-06-01T07:36:28.178Z"
              createdBy: "topcoder user"
              updatedBy: "topcoder user"
            - id: "c160c47299589a2d90bd2247"
              type: "ContestSubmission"
              url: "https://software.topcoder.com/review/actions/DownloadContestSubmission?uid=123457"
              memberId: "d40796a325341bdb8c973656"
              challengeId: "8b1a70e7e492adc4551a0d68"
              created: "2018-05-20T08:00:30.000Z"
              updated: "2018-06-01T09:23:00.178Z"
              createdBy: "topcoder user"
              updatedBy: "topcoder user"
            items:
              $ref: "#/definitions/Submission"
          headers:
            X-Next-Page:
              type: "integer"
              description: "The index of the next page"
            X-Page:
              type: "integer"
              description: "The index of the current page (starting at 1)"
            X-Per-Page:
              type: "integer"
              description: "The number of items to list per page"
            X-Prev-Page:
              type: "integer"
              description: "The index of the previous page"
            X-Total:
              type: "integer"
              description: "The total number of items"
            X-Total-Pages:
              type: "integer"
              description: "The total number of pages"
            ETag:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                Common methods of ETag generation include using a collision-resistant\
                \ hash function of the resource's content, a hash of the last modification\
                \ timestamp, or even just a revision number.\n\nIn the next request,\
                \ the If-None-Match request header should utilize the ETag as previously\
                \ supplied in the response.\n"
            Last-Modified:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                The Last-Modified response HTTP header contains the date and time\
                \ at which the origin server believes the resource was last modified.\
                \ It is used as a validator to determine if a resource received or\
                \ stored is the same. Less accurate than an ETag header, it is a fallback\
                \ mechanism.\n\nNormally a database or otherwise maintained `Last-Modified\
                \ date` is maintained for the resource, which is supplied in the Last-Modified\
                \ response header.\n\nIn the subsequent request, the If-Modified-Since\
                \ request header can be populated with the previously retrieved `Last-Modified`.\n"
            Link:
              type: "string"
              description: "Pagination link header."
        304:
          $ref: "#/definitions/NotModified"
        400:
          $ref: "#/definitions/BadRequest"
        401:
          $ref: "#/definitions/Unauthorized"
        403:
          $ref: "#/definitions/Forbidden"
        500:
          $ref: "#/definitions/ServerError"
      x-swagger-router-controller: "Submissions"
    head:
      tags:
      - "Submissions"
      summary: "Get only response status and headers information but no response body\
        \ for the endpoint.\n"
      description: "Get response status and headers information for the endpoint.\
        \ Link headers are sent back and they have rel set to prev, next, first, last\
        \ and contain the relevant URL.\n\nRequested submissions can be filtered using\
        \ filter parameters `type`, `url`, `memberId`, `challengeId` (all filter parameters\
        \ are optional and combined by the logical operation `AND`).\n\n**Authorization:**\
        \ Submission is accessible by roles `topcoder user`, `admin` and `copilot`.\n"
      operationId: "headSubmissions"
      parameters:
      - name: "page"
        in: "query"
        description: "The page number."
        required: false
        type: "integer"
        default: 1
      - name: "perPage"
        in: "query"
        description: "The number of items to list per page."
        required: false
        type: "integer"
        default: 20
        maximum: 100
      - name: "type"
        in: "query"
        description: "The type filter for submissions."
        required: false
        type: "string"
      - name: "url"
        in: "query"
        description: "The url filter for submissions."
        required: false
        type: "string"
      - name: "memberId"
        in: "query"
        description: "The member id filter for submissions."
        required: false
        type: "string"
      - name: "challengeId"
        in: "query"
        description: "The challenge id filter for submissions."
        required: false
        type: "string"
      - name: "If-None-Match"
        in: "header"
        description: "Optional. If used in the request, the If-None-Match request\
          \ header should utilize the ETag as previously supplied in the response.\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Optional. In the subsequent request, the If-Modified-Since request\
          \ header can be populated with the previously retrieved `Last-Modified`.\n"
        required: false
        type: "string"
      responses:
        200:
          description: "OK - The request was successful."
          headers:
            X-Next-Page:
              type: "integer"
              description: "The index of the next page"
            X-Page:
              type: "integer"
              description: "The index of the current page (starting at 1)"
            X-Per-Page:
              type: "integer"
              description: "The number of items to list per page"
            X-Prev-Page:
              type: "integer"
              description: "The index of the previous page"
            X-Total:
              type: "integer"
              description: "The total number of items"
            X-Total-Pages:
              type: "integer"
              description: "The total number of pages"
            ETag:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                Common methods of ETag generation include using a collision-resistant\
                \ hash function of the resource's content, a hash of the last modification\
                \ timestamp, or even just a revision number.\n\nIn the next request,\
                \ the If-None-Match request header should utilize the ETag as previously\
                \ supplied in the response.\n"
            Last-Modified:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                The Last-Modified response HTTP header contains the date and time\
                \ at which the origin server believes the resource was last modified.\
                \ It is used as a validator to determine if a resource received or\
                \ stored is the same. Less accurate than an ETag header, it is a fallback\
                \ mechanism.\n\nNormally a database or otherwise maintained `Last-Modified\
                \ date` is maintained for the resource, which is supplied in the Last-Modified\
                \ response header.\n\nIn the subsequent request, the If-Modified-Since\
                \ request header can be populated with the previously retrieved `Last-Modified`.\n"
            Link:
              type: "string"
              description: "Pagination link header."
        304:
          $ref: "#/definitions/NotModifiedWithoutBody"
        400:
          $ref: "#/definitions/BadRequestWithoutBody"
        401:
          $ref: "#/definitions/UnauthorizedWithoutBody"
        403:
          $ref: "#/definitions/ForbiddenWithoutBody"
        500:
          $ref: "#/definitions/ServerErrorWithoutBody"
      x-swagger-router-controller: "Submissions"
    post:
      tags:
      - "Submissions"
      summary: "Create a submission."
      description: "Create a new submission.\n\n**Authorization:** Submission creation\
        \ is accessible by roles `topcoder user`, `admin` and `copilot`.\n"
      operationId: "createSubmission"
      consumes:
         - multipart/form-data
      parameters:
        - in: formData
          name: submission
          type: file
          required: false
          description: The submission file to upload.
        - in: formData
          name: url
          type: string
          required: false
          description: Submission file url.
        - in: formData
          name: type
          type: string
          required: true
          description: Submission type.
        - in: formData
          name: memberId
          type: string
          required: true
          description: Member Id.
        - in: formData
          name: challengeId
          type: string
          required: true
          description: Challenge Id.
      responses:
        201:
          description: "Created - The request was successful and the resource is returned."
          schema:
            $ref: "#/definitions/Submission"
          headers:
            Location:
              type: "string"
              description: "The Location response header indicates the URL to redirect\
                \ a page to or created resource. It only provides a meaning when served\
                \ with a 3xx (redirection) or 201 (created) status response."
        400:
          $ref: "#/definitions/BadRequest"
        401:
          $ref: "#/definitions/Unauthorized"
        403:
          $ref: "#/definitions/Forbidden"
        409:
          $ref: "#/definitions/Conflict"
        500:
          $ref: "#/definitions/ServerError"
      x-swagger-router-controller: "Submissions"
  /submissions/{submissionId}:
    get:
      tags:
      - "Submissions"
      summary: "Get the submission."
      description: "Get the submission by id.\n\n**Authorization:** Submission is\
        \ accessible by roles `topcoder user`, `admin` and `copilot`.\n"
      operationId: "getSubmission"
      parameters:
      - name: "submissionId"
        in: "path"
        description: "submission id"
        required: true
        type: "string"
      - name: "If-None-Match"
        in: "header"
        description: "Optional. If used in the request, the If-None-Match request\
          \ header should utilize the ETag as previously supplied in the response.\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Optional. In the subsequent request, the If-Modified-Since request\
          \ header can be populated with the previously retrieved `Last-Modified`.\n"
        required: false
        type: "string"
      responses:
        200:
          description: "OK - the request was successful and the submission is returned."
          schema:
            $ref: "#/definitions/Submission"
          headers:
            ETag:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                Common methods of ETag generation include using a collision-resistant\
                \ hash function of the resource's content, a hash of the last modification\
                \ timestamp, or even just a revision number.\n\nIn the next request,\
                \ the If-None-Match request header should utilize the ETag as previously\
                \ supplied in the response.\n"
            Last-Modified:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                The Last-Modified response HTTP header contains the date and time\
                \ at which the origin server believes the resource was last modified.\
                \ It is used as a validator to determine if a resource received or\
                \ stored is the same. Less accurate than an ETag header, it is a fallback\
                \ mechanism.\n\nNormally a database or otherwise maintained `Last-Modified\
                \ date` is maintained for the resource, which is supplied in the Last-Modified\
                \ response header.\n\nIn the subsequent request, the If-Modified-Since\
                \ request header can be populated with the previously retrieved `Last-Modified`.\n"
        304:
          $ref: "#/definitions/NotModified"
        400:
          $ref: "#/definitions/BadRequest"
        401:
          $ref: "#/definitions/Unauthorized"
        403:
          $ref: "#/definitions/Forbidden"
        404:
          $ref: "#/definitions/NotFound"
        500:
          $ref: "#/definitions/ServerError"
      x-swagger-router-controller: "Submissions"
    head:
      tags:
      - "Submissions"
      summary: "Get only response status and headers information but no response body\
        \ for the endpoint.\n"
      description: "Get response status and headers information for the endpoint.\
        \ It does not contain response body.\n\n**Authorization:** Submission is accessible\
        \ by roles `topcoder user`, `admin` and `copilot`.\n"
      operationId: "headSubmission"
      parameters:
      - name: "submissionId"
        in: "path"
        description: "submission id"
        required: true
        type: "string"
      - name: "If-None-Match"
        in: "header"
        description: "Optional. If used in the request, the If-None-Match request\
          \ header should utilize the ETag as previously supplied in the response.\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Optional. In the subsequent request, the If-Modified-Since request\
          \ header can be populated with the previously retrieved `Last-Modified`.\n"
        required: false
        type: "string"
      responses:
        200:
          description: "OK - The request was successful."
          headers:
            ETag:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                Common methods of ETag generation include using a collision-resistant\
                \ hash function of the resource's content, a hash of the last modification\
                \ timestamp, or even just a revision number.\n\nIn the next request,\
                \ the If-None-Match request header should utilize the ETag as previously\
                \ supplied in the response.\n"
            Last-Modified:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                The Last-Modified response HTTP header contains the date and time\
                \ at which the origin server believes the resource was last modified.\
                \ It is used as a validator to determine if a resource received or\
                \ stored is the same. Less accurate than an ETag header, it is a fallback\
                \ mechanism.\n\nNormally a database or otherwise maintained `Last-Modified\
                \ date` is maintained for the resource, which is supplied in the Last-Modified\
                \ response header.\n\nIn the subsequent request, the If-Modified-Since\
                \ request header can be populated with the previously retrieved `Last-Modified`.\n"
        304:
          $ref: "#/definitions/NotModifiedWithoutBody"
        400:
          $ref: "#/definitions/BadRequestWithoutBody"
        401:
          $ref: "#/definitions/UnauthorizedWithoutBody"
        403:
          $ref: "#/definitions/ForbiddenWithoutBody"
        500:
          $ref: "#/definitions/ServerErrorWithoutBody"
      x-swagger-router-controller: "Submissions"
    put:
      tags:
      - "Submissions"
      summary: "Update the submission."
      description: "Update the submission by id.\n\n**Authorization:** Submission\
        \ update is accessible only by `admin` role.\n"
      operationId: "updateSubmission"
      parameters:
      - name: "submissionId"
        in: "path"
        description: "submission id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/UpdatableSubmission"
      responses:
        200:
          description: "OK - The request was successful and the updated resource is\
            \ returned."
          schema:
            $ref: "#/definitions/Submission"
        400:
          $ref: "#/definitions/BadRequest"
        401:
          $ref: "#/definitions/Unauthorized"
        403:
          $ref: "#/definitions/Forbidden"
        404:
          $ref: "#/definitions/NotFound"
        500:
          $ref: "#/definitions/ServerError"
      x-swagger-router-controller: "Submissions"
    delete:
      tags:
      - "Submissions"
      summary: "Delete the submission."
      description: "Delete the submission.\n\n**Authorization:** Submission deletion\
        \ is accessible only by `admin` role.\n"
      operationId: "deleteSubmission"
      parameters:
      - name: "submissionId"
        in: "path"
        description: "submission id"
        required: true
        type: "string"
      responses:
        204:
          $ref: "#/definitions/NoContent"
        400:
          $ref: "#/definitions/BadRequest"
        401:
          $ref: "#/definitions/Unauthorized"
        403:
          $ref: "#/definitions/Forbidden"
        404:
          $ref: "#/definitions/NotFound"
        500:
          $ref: "#/definitions/ServerError"
      x-swagger-router-controller: "Submissions"
    patch:
      tags:
      - "Submissions"
      summary: "Partially update the submission."
      description: "Allows to partially modify the submission with the provided request\
        \ body properties.\n\n**Authorization:** Partially modify of submission is\
        \ accessible only by `admin` role.\n"
      operationId: "partiallyUpdateSubmission"
      parameters:
      - name: "submissionId"
        in: "path"
        description: "submission id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PartiallySubmission"
      responses:
        200:
          description: "OK - The request was successful and the updated resource is\
            \ returned."
          schema:
            $ref: "#/definitions/Submission"
        400:
          $ref: "#/definitions/BadRequest"
        401:
          $ref: "#/definitions/Unauthorized"
        403:
          $ref: "#/definitions/Forbidden"
        404:
          $ref: "#/definitions/NotFound"
        500:
          $ref: "#/definitions/ServerError"
      x-swagger-router-controller: "Submissions"
  /reviewSummations:
    get:
      tags:
      - "Review summations"
      summary: "Get all review summations."
      description: "Get all review summations. Link headers are sent back and they\
        \ have rel set to prev, next, first, last and contain the relevant URL.\n\n\
        Resulted collection of review summations can be filtered using filter parameters\
        \ `submissionId`, `aggregateScore`, `scoreCardId`, `isPassing` (all filter\
        \ parameters are optional and combined by the logical operation `AND`).\n\n\
        **Authorization:** Review summation is accessible by roles `admin` and `copilot`.\n"
      operationId: "getReviewSummations"
      parameters:
      - name: "page"
        in: "query"
        description: "The page number."
        required: false
        type: "integer"
        default: 1
      - name: "perPage"
        in: "query"
        description: "The number of items to list per page."
        required: false
        type: "integer"
        default: 20
        maximum: 100
      - name: "submissionId"
        in: "query"
        description: "The submission id filter for review summations."
        required: false
        type: "string"
      - name: "aggregateScore"
        in: "query"
        description: "Theaggregate score filter for review summations."
        required: false
        type: "number"
        format: "double"
      - name: "scoreCardId"
        in: "query"
        description: "The score card id filter for review summations."
        required: false
        type: "string"
      - name: "isPassing"
        in: "query"
        description: "The passing boolean flag filter for review summations."
        required: false
        type: "boolean"
      - name: "If-None-Match"
        in: "header"
        description: "Optional. If used in the request, the If-None-Match request\
          \ header should utilize the ETag as previously supplied in the response.\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Optional. In the subsequent request, the If-Modified-Since request\
          \ header can be populated with the previously retrieved `Last-Modified`.\n"
        required: false
        type: "string"
      responses:
        200:
          description: "OK - the request was successful, the resource are returned."
          schema:
            type: "array"
            example:
            - id: "38c31a722f4be8d96c2bf02d"
              submissionId: "9ff95a9cb59a973c3fd68833"
              aggregateScore: 17.8
              scoreCardId: "a6999566638fb16dbdf668fd"
              isPassing: false
              created: "2018-05-20T07:00:30.123Z"
              updated: "2018-06-01T07:36:28.178Z"
              createdBy: "copilot"
              updatedBy: "copilot"
            - id: "6c238bd70a8df6d57f8cbdb4"
              submissionId: "0e1c182598114350758eaca7"
              aggregateScore: 97.8
              scoreCardId: "b3916bd336590c55577d3056"
              isPassing: true
              created: "2018-05-20T07:00:30.123Z"
              updated: "2018-06-01T07:36:28.178Z"
              createdBy: "copilot"
              updatedBy: "copilot"
            items:
              $ref: "#/definitions/ReviewSummation"
          headers:
            X-Next-Page:
              type: "integer"
              description: "The index of the next page"
            X-Page:
              type: "integer"
              description: "The index of the current page (starting at 1)"
            X-Per-Page:
              type: "integer"
              description: "The number of items to list per page"
            X-Prev-Page:
              type: "integer"
              description: "The index of the previous page"
            X-Total:
              type: "integer"
              description: "The total number of items"
            X-Total-Pages:
              type: "integer"
              description: "The total number of pages"
            ETag:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                Common methods of ETag generation include using a collision-resistant\
                \ hash function of the resource's content, a hash of the last modification\
                \ timestamp, or even just a revision number.\n\nIn the next request,\
                \ the If-None-Match request header should utilize the ETag as previously\
                \ supplied in the response.\n"
            Last-Modified:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                The Last-Modified response HTTP header contains the date and time\
                \ at which the origin server believes the resource was last modified.\
                \ It is used as a validator to determine if a resource received or\
                \ stored is the same. Less accurate than an ETag header, it is a fallback\
                \ mechanism.\n\nNormally a database or otherwise maintained `Last-Modified\
                \ date` is maintained for the resource, which is supplied in the Last-Modified\
                \ response header.\n\nIn the subsequent request, the If-Modified-Since\
                \ request header can be populated with the previously retrieved `Last-Modified`.\n"
            Link:
              type: "string"
              description: "Pagination link header."
        304:
          $ref: "#/definitions/NotModified"
        400:
          $ref: "#/definitions/BadRequest"
        401:
          $ref: "#/definitions/Unauthorized"
        403:
          $ref: "#/definitions/Forbidden"
        500:
          $ref: "#/definitions/ServerError"
      x-swagger-router-controller: "ReviewSummations"
    head:
      tags:
      - "Review summations"
      summary: "Get only response status and headers information but no response body\
        \ for the endpoint.\n"
      description: "Get response status and headers information for the endpoint.\
        \ Link headers are sent back and they have rel set to prev, next, first, last\
        \ and contain the relevant URL.\n\nRequested review summations can be filtered\
        \ using filter parameters `submissionId`, `aggregateScore`, `scoreCardId`,\
        \ `isPassing` (all filter parameters are optional and combined by the logical\
        \ operation `AND`).\n\n**Authorization:** Review summation is accessible by\
        \ roles `admin` and `copilot`.\n"
      operationId: "headReviewSummations"
      parameters:
      - name: "page"
        in: "query"
        description: "The page number."
        required: false
        type: "integer"
        default: 1
      - name: "perPage"
        in: "query"
        description: "The number of items to list per page."
        required: false
        type: "integer"
        default: 20
        maximum: 100
      - name: "submissionId"
        in: "query"
        description: "The submission id filter for review summations."
        required: false
        type: "string"
      - name: "aggregateScore"
        in: "query"
        description: "Theaggregate score filter for review summations."
        required: false
        type: "number"
        format: "double"
      - name: "scoreCardId"
        in: "query"
        description: "The score card id filter for review summations."
        required: false
        type: "string"
      - name: "isPassing"
        in: "query"
        description: "The passing boolean flag filter for review summations."
        required: false
        type: "boolean"
      - name: "If-None-Match"
        in: "header"
        description: "Optional. If used in the request, the If-None-Match request\
          \ header should utilize the ETag as previously supplied in the response.\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Optional. In the subsequent request, the If-Modified-Since request\
          \ header can be populated with the previously retrieved `Last-Modified`.\n"
        required: false
        type: "string"
      responses:
        200:
          description: "OK - The request was successful."
          headers:
            X-Next-Page:
              type: "integer"
              description: "The index of the next page"
            X-Page:
              type: "integer"
              description: "The index of the current page (starting at 1)"
            X-Per-Page:
              type: "integer"
              description: "The number of items to list per page"
            X-Prev-Page:
              type: "integer"
              description: "The index of the previous page"
            X-Total:
              type: "integer"
              description: "The total number of items"
            X-Total-Pages:
              type: "integer"
              description: "The total number of pages"
            ETag:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                Common methods of ETag generation include using a collision-resistant\
                \ hash function of the resource's content, a hash of the last modification\
                \ timestamp, or even just a revision number.\n\nIn the next request,\
                \ the If-None-Match request header should utilize the ETag as previously\
                \ supplied in the response.\n"
            Last-Modified:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                The Last-Modified response HTTP header contains the date and time\
                \ at which the origin server believes the resource was last modified.\
                \ It is used as a validator to determine if a resource received or\
                \ stored is the same. Less accurate than an ETag header, it is a fallback\
                \ mechanism.\n\nNormally a database or otherwise maintained `Last-Modified\
                \ date` is maintained for the resource, which is supplied in the Last-Modified\
                \ response header.\n\nIn the subsequent request, the If-Modified-Since\
                \ request header can be populated with the previously retrieved `Last-Modified`.\n"
            Link:
              type: "string"
              description: "Pagination link header."
        304:
          $ref: "#/definitions/NotModifiedWithoutBody"
        400:
          $ref: "#/definitions/BadRequestWithoutBody"
        401:
          $ref: "#/definitions/UnauthorizedWithoutBody"
        403:
          $ref: "#/definitions/ForbiddenWithoutBody"
        500:
          $ref: "#/definitions/ServerErrorWithoutBody"
      x-swagger-router-controller: "ReviewSummations"
    post:
      tags:
      - "Review summations"
      summary: "Create a review summation."
      description: "Create a new review summation.\n\n**Authorization:** Review summation\
        \ creation is accessible by roles `admin` and `copilot`.\n"
      operationId: "createReviewSummation"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ReviewSummation"
      responses:
        201:
          description: "Created - The request was successful and the resource is returned."
          schema:
            $ref: "#/definitions/ReviewSummation"
          headers:
            Location:
              type: "string"
              description: "The Location response header indicates the URL to redirect\
                \ a page to or created resource. It only provides a meaning when served\
                \ with a 3xx (redirection) or 201 (created) status response."
        400:
          $ref: "#/definitions/BadRequest"
        401:
          $ref: "#/definitions/Unauthorized"
        403:
          $ref: "#/definitions/Forbidden"
        409:
          $ref: "#/definitions/Conflict"
        500:
          $ref: "#/definitions/ServerError"
      x-swagger-router-controller: "ReviewSummations"
  /reviewSummations/{reviewSummationId}:
    get:
      tags:
      - "Review summations"
      summary: "Get the review summation."
      description: "Get the review summation by id.\n\n**Authorization:** Review summation\
        \ is accessible by roles `admin` and `copilot`.\n"
      operationId: "getReviewSummation"
      parameters:
      - name: "reviewSummationId"
        in: "path"
        description: "review summation id"
        required: true
        type: "string"
      - name: "If-None-Match"
        in: "header"
        description: "Optional. If used in the request, the If-None-Match request\
          \ header should utilize the ETag as previously supplied in the response.\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Optional. In the subsequent request, the If-Modified-Since request\
          \ header can be populated with the previously retrieved `Last-Modified`.\n"
        required: false
        type: "string"
      responses:
        200:
          description: "OK - the request was successful and the review summation is\
            \ returned."
          schema:
            $ref: "#/definitions/ReviewSummation"
          headers:
            ETag:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                Common methods of ETag generation include using a collision-resistant\
                \ hash function of the resource's content, a hash of the last modification\
                \ timestamp, or even just a revision number.\n\nIn the next request,\
                \ the If-None-Match request header should utilize the ETag as previously\
                \ supplied in the response.\n"
            Last-Modified:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                The Last-Modified response HTTP header contains the date and time\
                \ at which the origin server believes the resource was last modified.\
                \ It is used as a validator to determine if a resource received or\
                \ stored is the same. Less accurate than an ETag header, it is a fallback\
                \ mechanism.\n\nNormally a database or otherwise maintained `Last-Modified\
                \ date` is maintained for the resource, which is supplied in the Last-Modified\
                \ response header.\n\nIn the subsequent request, the If-Modified-Since\
                \ request header can be populated with the previously retrieved `Last-Modified`.\n"
        304:
          $ref: "#/definitions/NotModified"
        400:
          $ref: "#/definitions/BadRequest"
        401:
          $ref: "#/definitions/Unauthorized"
        403:
          $ref: "#/definitions/Forbidden"
        404:
          $ref: "#/definitions/NotFound"
        500:
          $ref: "#/definitions/ServerError"
      x-swagger-router-controller: "ReviewSummations"
    head:
      tags:
      - "Review summations"
      summary: "Get only response status and headers information but no response body\
        \ for the endpoint.\n"
      description: "Get response status and headers information for the endpoint.\
        \ It does not contain response body.\n\n**Authorization:** Review summation\
        \ is accessible by roles `admin` and `copilot`.\n"
      operationId: "headReviewSummation"
      parameters:
      - name: "reviewSummationId"
        in: "path"
        description: "review summation id"
        required: true
        type: "string"
      - name: "If-None-Match"
        in: "header"
        description: "Optional. If used in the request, the If-None-Match request\
          \ header should utilize the ETag as previously supplied in the response.\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Optional. In the subsequent request, the If-Modified-Since request\
          \ header can be populated with the previously retrieved `Last-Modified`.\n"
        required: false
        type: "string"
      responses:
        200:
          description: "OK - The request was successful."
          headers:
            ETag:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                Common methods of ETag generation include using a collision-resistant\
                \ hash function of the resource's content, a hash of the last modification\
                \ timestamp, or even just a revision number.\n\nIn the next request,\
                \ the If-None-Match request header should utilize the ETag as previously\
                \ supplied in the response.\n"
            Last-Modified:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                The Last-Modified response HTTP header contains the date and time\
                \ at which the origin server believes the resource was last modified.\
                \ It is used as a validator to determine if a resource received or\
                \ stored is the same. Less accurate than an ETag header, it is a fallback\
                \ mechanism.\n\nNormally a database or otherwise maintained `Last-Modified\
                \ date` is maintained for the resource, which is supplied in the Last-Modified\
                \ response header.\n\nIn the subsequent request, the If-Modified-Since\
                \ request header can be populated with the previously retrieved `Last-Modified`.\n"
        304:
          $ref: "#/definitions/NotModifiedWithoutBody"
        400:
          $ref: "#/definitions/BadRequestWithoutBody"
        401:
          $ref: "#/definitions/UnauthorizedWithoutBody"
        403:
          $ref: "#/definitions/ForbiddenWithoutBody"
        500:
          $ref: "#/definitions/ServerErrorWithoutBody"
      x-swagger-router-controller: "ReviewSummations"
    put:
      tags:
      - "Review summations"
      summary: "Update the review summation."
      description: "Update the review summation by id.\n\n**Authorization:** Review\
        \ summation update is accessible only by `admin` role.\n"
      operationId: "updateReviewSummation"
      parameters:
      - name: "reviewSummationId"
        in: "path"
        description: "review summation id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/UpdatableReviewSummation"
      responses:
        200:
          description: "OK - The request was successful and the updated resource is\
            \ returned."
          schema:
            $ref: "#/definitions/ReviewSummation"
        400:
          $ref: "#/definitions/BadRequest"
        401:
          $ref: "#/definitions/Unauthorized"
        403:
          $ref: "#/definitions/Forbidden"
        404:
          $ref: "#/definitions/NotFound"
        500:
          $ref: "#/definitions/ServerError"
      x-swagger-router-controller: "ReviewSummations"
    delete:
      tags:
      - "Review summations"
      summary: "Delete the review summation."
      description: "Delete the review summation.\n\n**Authorization:** Review summation\
        \ deletion is accessible only by `admin` role.\n"
      operationId: "deleteReviewSummation"
      parameters:
      - name: "reviewSummationId"
        in: "path"
        description: "review summation id"
        required: true
        type: "string"
      responses:
        204:
          $ref: "#/definitions/NoContent"
        400:
          $ref: "#/definitions/BadRequest"
        401:
          $ref: "#/definitions/Unauthorized"
        403:
          $ref: "#/definitions/Forbidden"
        404:
          $ref: "#/definitions/NotFound"
        500:
          $ref: "#/definitions/ServerError"
      x-swagger-router-controller: "ReviewSummations"
    patch:
      tags:
      - "Review summations"
      summary: "Partially update the review summation."
      description: "Allows to partially modify the review summation with the provided\
        \ request body properties.\n\n**Authorization:** Partially modify of review\
        \ summation is accessible only by `admin` role.\n"
      operationId: "partiallyUpdateReviewSummation"
      parameters:
      - name: "reviewSummationId"
        in: "path"
        description: "review summation id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PartiallyReviewSummation"
      responses:
        200:
          description: "OK - The request was successful and the updated resource is\
            \ returned."
          schema:
            $ref: "#/definitions/ReviewSummation"
        400:
          $ref: "#/definitions/BadRequest"
        401:
          $ref: "#/definitions/Unauthorized"
        403:
          $ref: "#/definitions/Forbidden"
        404:
          $ref: "#/definitions/NotFound"
        500:
          $ref: "#/definitions/ServerError"
      x-swagger-router-controller: "ReviewSummations"
  /reviews:
    get:
      tags:
      - "Reviews"
      summary: "Get all reviews."
      description: "Get all reviews. Link headers are sent back and they have rel\
        \ set to prev, next, first, last and contain the relevant URL.\n\nResulted\
        \ collection of reviews can be filtered using filter parameters `score`, `typeId`,\
        \ `reviewerId`, `scoreCardId` (all filter parameters are optional and combined\
        \ by the logical operation `AND`).\n\n**Authorization:** Review is accessible\
        \ by roles `admin` and `copilot`.\n"
      operationId: "getReviews"
      parameters:
      - name: "page"
        in: "query"
        description: "The page number."
        required: false
        type: "integer"
        default: 1
      - name: "perPage"
        in: "query"
        description: "The number of items to list per page."
        required: false
        type: "integer"
        default: 20
        maximum: 100
      - name: "score"
        in: "query"
        description: "The score filter for reviews."
        required: false
        type: "number"
        format: "double"
      - name: "typeId"
        in: "query"
        description: "The type id filter for reviews."
        required: false
        type: "string"
      - name: "reviewerId"
        in: "query"
        description: "The reviewer id filter for reviews."
        required: false
        type: "string"
      - name: "scoreCardId"
        in: "query"
        description: "The score card id filter for reviews."
        required: false
        type: "string"
      - name: "If-None-Match"
        in: "header"
        description: "Optional. If used in the request, the If-None-Match request\
          \ header should utilize the ETag as previously supplied in the response.\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Optional. In the subsequent request, the If-Modified-Since request\
          \ header can be populated with the previously retrieved `Last-Modified`.\n"
        required: false
        type: "string"
      responses:
        200:
          description: "OK - the request was successful, the resource are returned."
          schema:
            type: "array"
            example:
            - id: "a75529df08beff833f4c6282"
              score: 95.5
              typeId: "b0b2a8220fcd169f684093fb"
              reviewerId: "fcadaf16dae64f5fb43bc7ee"
              scoreCardId: "0bf26a9e69e564a6c2988d12"
              submissionId: "255456"
              created: "2018-05-20T07:00:30.123Z"
              updated: "2018-06-01T07:36:28.178Z"
              createdBy: "admin"
              updatedBy: "admin"
            - id: "e84031c74a9566fe5ab848eb"
              score: 77.8
              typeId: "8bc66db12b81f038a19ecd00"
              reviewerId: "973fd66d229a7cfdbe9d9981"
              scoreCardId: "ffd96446bda80799bb2d34ed"
              submissionId: "255457"
              created: "2018-05-20T07:00:30.123Z"
              updated: "2018-06-01T07:36:28.178Z"
              createdBy: "admin"
              updatedBy: "admin"
            items:
              $ref: "#/definitions/Review"
          headers:
            X-Next-Page:
              type: "integer"
              description: "The index of the next page"
            X-Page:
              type: "integer"
              description: "The index of the current page (starting at 1)"
            X-Per-Page:
              type: "integer"
              description: "The number of items to list per page"
            X-Prev-Page:
              type: "integer"
              description: "The index of the previous page"
            X-Total:
              type: "integer"
              description: "The total number of items"
            X-Total-Pages:
              type: "integer"
              description: "The total number of pages"
            ETag:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                Common methods of ETag generation include using a collision-resistant\
                \ hash function of the resource's content, a hash of the last modification\
                \ timestamp, or even just a revision number.\n\nIn the next request,\
                \ the If-None-Match request header should utilize the ETag as previously\
                \ supplied in the response.\n"
            Last-Modified:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                The Last-Modified response HTTP header contains the date and time\
                \ at which the origin server believes the resource was last modified.\
                \ It is used as a validator to determine if a resource received or\
                \ stored is the same. Less accurate than an ETag header, it is a fallback\
                \ mechanism.\n\nNormally a database or otherwise maintained `Last-Modified\
                \ date` is maintained for the resource, which is supplied in the Last-Modified\
                \ response header.\n\nIn the subsequent request, the If-Modified-Since\
                \ request header can be populated with the previously retrieved `Last-Modified`.\n"
            Link:
              type: "string"
              description: "Pagination link header."
        304:
          $ref: "#/definitions/NotModified"
        400:
          $ref: "#/definitions/BadRequest"
        401:
          $ref: "#/definitions/Unauthorized"
        403:
          $ref: "#/definitions/Forbidden"
        500:
          $ref: "#/definitions/ServerError"
      x-swagger-router-controller: "Reviews"
    head:
      tags:
      - "Reviews"
      summary: "Get only response status and headers information but no response body\
        \ for the endpoint.\n"
      description: "Get response status and headers information for the endpoint.\
        \ Link headers are sent back and they have rel set to prev, next, first, last\
        \ and contain the relevant URL.\n\nRequested reviews can be filtered using\
        \ filter parameters `score`, `typeId`, `reviewerId`, `scoreCardId` (all filter\
        \ parameters are optional and combined by the logical operation `AND`).\n\n\
        **Authorization:** Review is accessible by roles `admin` and `copilot`.\n"
      operationId: "headReviews"
      parameters:
      - name: "page"
        in: "query"
        description: "The page number."
        required: false
        type: "integer"
        default: 1
      - name: "perPage"
        in: "query"
        description: "The number of items to list per page."
        required: false
        type: "integer"
        default: 20
        maximum: 100
      - name: "score"
        in: "query"
        description: "The score filter for reviews."
        required: false
        type: "number"
        format: "double"
      - name: "typeId"
        in: "query"
        description: "The type id filter for reviews."
        required: false
        type: "string"
      - name: "reviewerId"
        in: "query"
        description: "The reviewer id filter for reviews."
        required: false
        type: "string"
      - name: "scoreCardId"
        in: "query"
        description: "The score card id filter for reviews."
        required: false
        type: "string"
      - name: "If-None-Match"
        in: "header"
        description: "Optional. If used in the request, the If-None-Match request\
          \ header should utilize the ETag as previously supplied in the response.\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Optional. In the subsequent request, the If-Modified-Since request\
          \ header can be populated with the previously retrieved `Last-Modified`.\n"
        required: false
        type: "string"
      responses:
        200:
          description: "OK - The request was successful."
          headers:
            X-Next-Page:
              type: "integer"
              description: "The index of the next page"
            X-Page:
              type: "integer"
              description: "The index of the current page (starting at 1)"
            X-Per-Page:
              type: "integer"
              description: "The number of items to list per page"
            X-Prev-Page:
              type: "integer"
              description: "The index of the previous page"
            X-Total:
              type: "integer"
              description: "The total number of items"
            X-Total-Pages:
              type: "integer"
              description: "The total number of pages"
            ETag:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                Common methods of ETag generation include using a collision-resistant\
                \ hash function of the resource's content, a hash of the last modification\
                \ timestamp, or even just a revision number.\n\nIn the next request,\
                \ the If-None-Match request header should utilize the ETag as previously\
                \ supplied in the response.\n"
            Last-Modified:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                The Last-Modified response HTTP header contains the date and time\
                \ at which the origin server believes the resource was last modified.\
                \ It is used as a validator to determine if a resource received or\
                \ stored is the same. Less accurate than an ETag header, it is a fallback\
                \ mechanism.\n\nNormally a database or otherwise maintained `Last-Modified\
                \ date` is maintained for the resource, which is supplied in the Last-Modified\
                \ response header.\n\nIn the subsequent request, the If-Modified-Since\
                \ request header can be populated with the previously retrieved `Last-Modified`.\n"
            Link:
              type: "string"
              description: "Pagination link header."
        304:
          $ref: "#/definitions/NotModifiedWithoutBody"
        400:
          $ref: "#/definitions/BadRequestWithoutBody"
        401:
          $ref: "#/definitions/UnauthorizedWithoutBody"
        403:
          $ref: "#/definitions/ForbiddenWithoutBody"
        500:
          $ref: "#/definitions/ServerErrorWithoutBody"
      x-swagger-router-controller: "Reviews"
    post:
      tags:
      - "Reviews"
      summary: "Create a review."
      description: "Create a new review.\n\n**Authorization:** Review creation is\
        \ accessible by roles `admin` and `copilot`.\n"
      operationId: "createReview"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Review"
      responses:
        201:
          description: "Created - The request was successful and the resource is returned."
          schema:
            $ref: "#/definitions/Review"
          headers:
            Location:
              type: "string"
              description: "The Location response header indicates the URL to redirect\
                \ a page to or created resource. It only provides a meaning when served\
                \ with a 3xx (redirection) or 201 (created) status response."
        400:
          $ref: "#/definitions/BadRequest"
        401:
          $ref: "#/definitions/Unauthorized"
        403:
          $ref: "#/definitions/Forbidden"
        409:
          $ref: "#/definitions/Conflict"
        500:
          $ref: "#/definitions/ServerError"
      x-swagger-router-controller: "Reviews"
  /reviews/{reviewId}:
    get:
      tags:
      - "Reviews"
      summary: "Get the review."
      description: "Get the review by id.\n\n**Authorization:** Review is accessible\
        \ by roles `admin` and `copilot`.\n"
      operationId: "getReview"
      parameters:
      - name: "reviewId"
        in: "path"
        description: "review id"
        required: true
        type: "string"
      - name: "If-None-Match"
        in: "header"
        description: "Optional. If used in the request, the If-None-Match request\
          \ header should utilize the ETag as previously supplied in the response.\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Optional. In the subsequent request, the If-Modified-Since request\
          \ header can be populated with the previously retrieved `Last-Modified`.\n"
        required: false
        type: "string"
      responses:
        200:
          description: "OK - the request was successful and the review is returned."
          schema:
            $ref: "#/definitions/Review"
          headers:
            ETag:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                Common methods of ETag generation include using a collision-resistant\
                \ hash function of the resource's content, a hash of the last modification\
                \ timestamp, or even just a revision number.\n\nIn the next request,\
                \ the If-None-Match request header should utilize the ETag as previously\
                \ supplied in the response.\n"
            Last-Modified:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                The Last-Modified response HTTP header contains the date and time\
                \ at which the origin server believes the resource was last modified.\
                \ It is used as a validator to determine if a resource received or\
                \ stored is the same. Less accurate than an ETag header, it is a fallback\
                \ mechanism.\n\nNormally a database or otherwise maintained `Last-Modified\
                \ date` is maintained for the resource, which is supplied in the Last-Modified\
                \ response header.\n\nIn the subsequent request, the If-Modified-Since\
                \ request header can be populated with the previously retrieved `Last-Modified`.\n"
        304:
          $ref: "#/definitions/NotModified"
        400:
          $ref: "#/definitions/BadRequest"
        401:
          $ref: "#/definitions/Unauthorized"
        403:
          $ref: "#/definitions/Forbidden"
        404:
          $ref: "#/definitions/NotFound"
        500:
          $ref: "#/definitions/ServerError"
      x-swagger-router-controller: "Reviews"
    head:
      tags:
      - "Reviews"
      summary: "Get only response status and headers information but no response body\
        \ for the endpoint.\n"
      description: "Get response status and headers information for the endpoint.\
        \ It does not contain response body.\n\n**Authorization:** Review is accessible\
        \ by roles `admin` and `copilot`.\n"
      operationId: "headReview"
      parameters:
      - name: "reviewId"
        in: "path"
        description: "review id"
        required: true
        type: "string"
      - name: "If-None-Match"
        in: "header"
        description: "Optional. If used in the request, the If-None-Match request\
          \ header should utilize the ETag as previously supplied in the response.\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Optional. In the subsequent request, the If-Modified-Since request\
          \ header can be populated with the previously retrieved `Last-Modified`.\n"
        required: false
        type: "string"
      responses:
        200:
          description: "OK - The request was successful."
          headers:
            ETag:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                Common methods of ETag generation include using a collision-resistant\
                \ hash function of the resource's content, a hash of the last modification\
                \ timestamp, or even just a revision number.\n\nIn the next request,\
                \ the If-None-Match request header should utilize the ETag as previously\
                \ supplied in the response.\n"
            Last-Modified:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                The Last-Modified response HTTP header contains the date and time\
                \ at which the origin server believes the resource was last modified.\
                \ It is used as a validator to determine if a resource received or\
                \ stored is the same. Less accurate than an ETag header, it is a fallback\
                \ mechanism.\n\nNormally a database or otherwise maintained `Last-Modified\
                \ date` is maintained for the resource, which is supplied in the Last-Modified\
                \ response header.\n\nIn the subsequent request, the If-Modified-Since\
                \ request header can be populated with the previously retrieved `Last-Modified`.\n"
        304:
          $ref: "#/definitions/NotModifiedWithoutBody"
        400:
          $ref: "#/definitions/BadRequestWithoutBody"
        401:
          $ref: "#/definitions/UnauthorizedWithoutBody"
        403:
          $ref: "#/definitions/ForbiddenWithoutBody"
        500:
          $ref: "#/definitions/ServerErrorWithoutBody"
      x-swagger-router-controller: "Reviews"
    put:
      tags:
      - "Reviews"
      summary: "Update the review."
      description: "Update the review by id.\n\n**Authorization:** Review update is\
        \ accessible only by `admin` role.\n"
      operationId: "updateReview"
      parameters:
      - name: "reviewId"
        in: "path"
        description: "review id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/UpdatableReview"
      responses:
        200:
          description: "OK - The request was successful and the updated resource is\
            \ returned."
          schema:
            $ref: "#/definitions/Review"
        400:
          $ref: "#/definitions/BadRequest"
        401:
          $ref: "#/definitions/Unauthorized"
        403:
          $ref: "#/definitions/Forbidden"
        404:
          $ref: "#/definitions/NotFound"
        500:
          $ref: "#/definitions/ServerError"
      x-swagger-router-controller: "Reviews"
    delete:
      tags:
      - "Reviews"
      summary: "Delete the review."
      description: "Delete the review.\n\n**Authorization:** Review deletion is accessible\
        \ only by `admin` role.\n"
      operationId: "deleteReview"
      parameters:
      - name: "reviewId"
        in: "path"
        description: "review id"
        required: true
        type: "string"
      responses:
        204:
          $ref: "#/definitions/NoContent"
        400:
          $ref: "#/definitions/BadRequest"
        401:
          $ref: "#/definitions/Unauthorized"
        403:
          $ref: "#/definitions/Forbidden"
        404:
          $ref: "#/definitions/NotFound"
        500:
          $ref: "#/definitions/ServerError"
      x-swagger-router-controller: "Reviews"
    patch:
      tags:
      - "Reviews"
      summary: "Partially update the review."
      description: "Allows to partially modify the review with the provided request\
        \ body properties.\n\n**Authorization:** Partially modify of review is accessible\
        \ only by `admin` role.\n"
      operationId: "partiallyUpdateReview"
      parameters:
      - name: "reviewId"
        in: "path"
        description: "review id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PartiallyReview"
      responses:
        200:
          description: "OK - The request was successful and the updated resource is\
            \ returned."
          schema:
            $ref: "#/definitions/Review"
        400:
          $ref: "#/definitions/BadRequest"
        401:
          $ref: "#/definitions/Unauthorized"
        403:
          $ref: "#/definitions/Forbidden"
        404:
          $ref: "#/definitions/NotFound"
        500:
          $ref: "#/definitions/ServerError"
      x-swagger-router-controller: "Reviews"
  /reviewTypes:
    get:
      tags:
      - "Review types"
      summary: "Get all review types."
      description: "Get all review types. Link headers are sent back and they have\
        \ rel set to prev, next, first, last and contain the relevant URL.\n\nResulted\
        \ collection of review types can be filtered using filter parameters `name`,\
        \ `isActive` (all filter parameters are optional and combined by the logical\
        \ operation `AND`).\n\n**Authorization:** Review types is accessible by roles\
        \ `admin` and `copilot`.\n"
      operationId: "getReviewTypes"
      parameters:
      - name: "page"
        in: "query"
        description: "The page number."
        required: false
        type: "integer"
        default: 1
      - name: "perPage"
        in: "query"
        description: "The number of items to list per page."
        required: false
        type: "integer"
        default: 20
        maximum: 100
      - name: "name"
        in: "query"
        description: "The name filter for review types."
        required: false
        type: "string"
      - name: "isActive"
        in: "query"
        description: "The active boolean flag filter for review types."
        required: false
        type: "boolean"
      - name: "If-None-Match"
        in: "header"
        description: "Optional. If used in the request, the If-None-Match request\
          \ header should utilize the ETag as previously supplied in the response.\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Optional. In the subsequent request, the If-Modified-Since request\
          \ header can be populated with the previously retrieved `Last-Modified`.\n"
        required: false
        type: "string"
      responses:
        200:
          description: "OK - the request was successful, the resource are returned."
          schema:
            type: "array"
            example:
            - id: "928a2ec51c69ef84f5dccc4f"
              name: "Iterative Review"
              isActive: true
            - id: "c36f666674ed76b0071ee322"
              name: "Spec Review"
              isActive: true
            - id: "583581ae0c02bad6f274939b"
              name: "Screening"
              isActive: true
            items:
              $ref: "#/definitions/ReviewType"
          headers:
            X-Next-Page:
              type: "integer"
              description: "The index of the next page"
            X-Page:
              type: "integer"
              description: "The index of the current page (starting at 1)"
            X-Per-Page:
              type: "integer"
              description: "The number of items to list per page"
            X-Prev-Page:
              type: "integer"
              description: "The index of the previous page"
            X-Total:
              type: "integer"
              description: "The total number of items"
            X-Total-Pages:
              type: "integer"
              description: "The total number of pages"
            ETag:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                Common methods of ETag generation include using a collision-resistant\
                \ hash function of the resource's content, a hash of the last modification\
                \ timestamp, or even just a revision number.\n\nIn the next request,\
                \ the If-None-Match request header should utilize the ETag as previously\
                \ supplied in the response.\n"
            Last-Modified:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                The Last-Modified response HTTP header contains the date and time\
                \ at which the origin server believes the resource was last modified.\
                \ It is used as a validator to determine if a resource received or\
                \ stored is the same. Less accurate than an ETag header, it is a fallback\
                \ mechanism.\n\nNormally a database or otherwise maintained `Last-Modified\
                \ date` is maintained for the resource, which is supplied in the Last-Modified\
                \ response header.\n\nIn the subsequent request, the If-Modified-Since\
                \ request header can be populated with the previously retrieved `Last-Modified`.\n"
            Link:
              type: "string"
              description: "Pagination link header."
        304:
          $ref: "#/definitions/NotModified"
        400:
          $ref: "#/definitions/BadRequest"
        401:
          $ref: "#/definitions/Unauthorized"
        403:
          $ref: "#/definitions/Forbidden"
        500:
          $ref: "#/definitions/ServerError"
      x-swagger-router-controller: "ReviewTypes"
    head:
      tags:
      - "Review types"
      summary: "Get only response status and headers information but no response body\
        \ for the endpoint.\n"
      description: "Get response status and headers information for the endpoint.\
        \ Link headers are sent back and they have rel set to prev, next, first, last\
        \ and contain the relevant URL.\n\nRequested review types can be filtered\
        \ using filter parameters `name`, `isActive` (all filter parameters are optional\
        \ and combined by the logical operation `AND`).\n\n**Authorization:** Review\
        \ types is accessible by roles `admin` and `copilot`.\n"
      operationId: "headReviewTypes"
      parameters:
      - name: "page"
        in: "query"
        description: "The page number."
        required: false
        type: "integer"
        default: 1
      - name: "perPage"
        in: "query"
        description: "The number of items to list per page."
        required: false
        type: "integer"
        default: 20
        maximum: 100
      - name: "name"
        in: "query"
        description: "The name filter for review types."
        required: false
        type: "string"
      - name: "isActive"
        in: "query"
        description: "The active boolean flag filter for review types."
        required: false
        type: "boolean"
      - name: "If-None-Match"
        in: "header"
        description: "Optional. If used in the request, the If-None-Match request\
          \ header should utilize the ETag as previously supplied in the response.\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Optional. In the subsequent request, the If-Modified-Since request\
          \ header can be populated with the previously retrieved `Last-Modified`.\n"
        required: false
        type: "string"
      responses:
        200:
          description: "OK - The request was successful."
          headers:
            X-Next-Page:
              type: "integer"
              description: "The index of the next page"
            X-Page:
              type: "integer"
              description: "The index of the current page (starting at 1)"
            X-Per-Page:
              type: "integer"
              description: "The number of items to list per page"
            X-Prev-Page:
              type: "integer"
              description: "The index of the previous page"
            X-Total:
              type: "integer"
              description: "The total number of items"
            X-Total-Pages:
              type: "integer"
              description: "The total number of pages"
            Link:
              type: "string"
              description: "Pagination link header."
            ETag:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                Common methods of ETag generation include using a collision-resistant\
                \ hash function of the resource's content, a hash of the last modification\
                \ timestamp, or even just a revision number.\n\nIn the next request,\
                \ the If-None-Match request header should utilize the ETag as previously\
                \ supplied in the response.\n"
            Last-Modified:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                The Last-Modified response HTTP header contains the date and time\
                \ at which the origin server believes the resource was last modified.\
                \ It is used as a validator to determine if a resource received or\
                \ stored is the same. Less accurate than an ETag header, it is a fallback\
                \ mechanism.\n\nNormally a database or otherwise maintained `Last-Modified\
                \ date` is maintained for the resource, which is supplied in the Last-Modified\
                \ response header.\n\nIn the subsequent request, the If-Modified-Since\
                \ request header can be populated with the previously retrieved `Last-Modified`.\n"
        304:
          $ref: "#/definitions/NotModifiedWithoutBody"
        400:
          $ref: "#/definitions/BadRequestWithoutBody"
        401:
          $ref: "#/definitions/UnauthorizedWithoutBody"
        403:
          $ref: "#/definitions/ForbiddenWithoutBody"
        500:
          $ref: "#/definitions/ServerErrorWithoutBody"
      x-swagger-router-controller: "ReviewTypes"
    post:
      tags:
      - "Review types"
      summary: "Create a review type."
      description: "Create a new review type.\n\n**Authorization:** Review type creation\
        \ is accessible by roles `admin` and `copilot`.\n"
      operationId: "createReviewType"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ReviewType"
      responses:
        201:
          description: "Created - The request was successful and the resource is returned."
          schema:
            $ref: "#/definitions/ReviewType"
          headers:
            Location:
              type: "string"
              description: "The Location response header indicates the URL to redirect\
                \ a page to or created resource. It only provides a meaning when served\
                \ with a 3xx (redirection) or 201 (created) status response."
        400:
          $ref: "#/definitions/BadRequest"
        401:
          $ref: "#/definitions/Unauthorized"
        403:
          $ref: "#/definitions/Forbidden"
        409:
          $ref: "#/definitions/Conflict"
        500:
          $ref: "#/definitions/ServerError"
      x-swagger-router-controller: "ReviewTypes"
  /reviewTypes/{reviewTypeId}:
    get:
      tags:
      - "Review types"
      summary: "Get the review type."
      description: "Get the review type by id.\n\n**Authorization:** Review type is\
        \ accessible by roles `admin` and `copilot`.\n"
      operationId: "getReviewType"
      parameters:
      - name: "reviewTypeId"
        in: "path"
        description: "review type id"
        required: true
        type: "string"
      - name: "If-None-Match"
        in: "header"
        description: "Optional. If used in the request, the If-None-Match request\
          \ header should utilize the ETag as previously supplied in the response.\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Optional. In the subsequent request, the If-Modified-Since request\
          \ header can be populated with the previously retrieved `Last-Modified`.\n"
        required: false
        type: "string"
      responses:
        200:
          description: "OK - the request was successful and the review is returned."
          schema:
            $ref: "#/definitions/ReviewType"
          headers:
            ETag:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                Common methods of ETag generation include using a collision-resistant\
                \ hash function of the resource's content, a hash of the last modification\
                \ timestamp, or even just a revision number.\n\nIn the next request,\
                \ the If-None-Match request header should utilize the ETag as previously\
                \ supplied in the response.\n"
            Last-Modified:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                The Last-Modified response HTTP header contains the date and time\
                \ at which the origin server believes the resource was last modified.\
                \ It is used as a validator to determine if a resource received or\
                \ stored is the same. Less accurate than an ETag header, it is a fallback\
                \ mechanism.\n\nNormally a database or otherwise maintained `Last-Modified\
                \ date` is maintained for the resource, which is supplied in the Last-Modified\
                \ response header.\n\nIn the subsequent request, the If-Modified-Since\
                \ request header can be populated with the previously retrieved `Last-Modified`.\n"
        304:
          $ref: "#/definitions/NotModified"
        400:
          $ref: "#/definitions/BadRequest"
        401:
          $ref: "#/definitions/Unauthorized"
        403:
          $ref: "#/definitions/Forbidden"
        404:
          $ref: "#/definitions/NotFound"
        500:
          $ref: "#/definitions/ServerError"
      x-swagger-router-controller: "ReviewTypes"
    head:
      tags:
      - "Review types"
      summary: "Get only response status and headers information but no response body\
        \ for the endpoint.\n"
      description: "Get response status and headers information for the endpoint.\
        \ It does not contain response body.\n\n**Authorization:** Review type is\
        \ accessible by roles `admin` and `copilot`.\n"
      operationId: "headReviewType"
      parameters:
      - name: "reviewTypeId"
        in: "path"
        description: "review type id"
        required: true
        type: "string"
      - name: "If-None-Match"
        in: "header"
        description: "Optional. If used in the request, the If-None-Match request\
          \ header should utilize the ETag as previously supplied in the response.\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Optional. In the subsequent request, the If-Modified-Since request\
          \ header can be populated with the previously retrieved `Last-Modified`.\n"
        required: false
        type: "string"
      responses:
        200:
          description: "OK - The request was successful."
          headers:
            ETag:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                Common methods of ETag generation include using a collision-resistant\
                \ hash function of the resource's content, a hash of the last modification\
                \ timestamp, or even just a revision number.\n\nIn the next request,\
                \ the If-None-Match request header should utilize the ETag as previously\
                \ supplied in the response.\n"
            Last-Modified:
              type: "string"
              description: "Optional and can be used according to HTTP specification.\n\
                The Last-Modified response HTTP header contains the date and time\
                \ at which the origin server believes the resource was last modified.\
                \ It is used as a validator to determine if a resource received or\
                \ stored is the same. Less accurate than an ETag header, it is a fallback\
                \ mechanism.\n\nNormally a database or otherwise maintained `Last-Modified\
                \ date` is maintained for the resource, which is supplied in the Last-Modified\
                \ response header.\n\nIn the subsequent request, the If-Modified-Since\
                \ request header can be populated with the previously retrieved `Last-Modified`.\n"
        304:
          $ref: "#/definitions/NotModifiedWithoutBody"
        400:
          $ref: "#/definitions/BadRequestWithoutBody"
        401:
          $ref: "#/definitions/UnauthorizedWithoutBody"
        403:
          $ref: "#/definitions/ForbiddenWithoutBody"
        500:
          $ref: "#/definitions/ServerErrorWithoutBody"
      x-swagger-router-controller: "ReviewTypes"
    put:
      tags:
      - "Review types"
      summary: "Update the review type."
      description: "Update the review type by id.\n\n**Authorization:** Review type\
        \ update is accessible only by `admin` role.\n"
      operationId: "updateReviewType"
      parameters:
      - name: "reviewTypeId"
        in: "path"
        description: "review type id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/UpdatableReviewType"
      responses:
        200:
          description: "OK - The request was successful and the updated resource is\
            \ returned."
          schema:
            $ref: "#/definitions/ReviewType"
        400:
          $ref: "#/definitions/BadRequest"
        401:
          $ref: "#/definitions/Unauthorized"
        403:
          $ref: "#/definitions/Forbidden"
        404:
          $ref: "#/definitions/NotFound"
        500:
          $ref: "#/definitions/ServerError"
      x-swagger-router-controller: "ReviewTypes"
    delete:
      tags:
      - "Review types"
      summary: "Delete the review type."
      description: "Delete the review type.\n\n**Authorization:** Review type deletion\
        \ is accessible only by `admin` role.\n"
      operationId: "deleteReviewType"
      parameters:
      - name: "reviewTypeId"
        in: "path"
        description: "review type id"
        required: true
        type: "string"
      responses:
        204:
          $ref: "#/definitions/NoContent"
        400:
          $ref: "#/definitions/BadRequest"
        401:
          $ref: "#/definitions/Unauthorized"
        403:
          $ref: "#/definitions/Forbidden"
        404:
          $ref: "#/definitions/NotFound"
        500:
          $ref: "#/definitions/ServerError"
      x-swagger-router-controller: "ReviewTypes"
    patch:
      tags:
      - "Review types"
      summary: "Partially update the review type."
      description: "Allows to partially modify the review type with the provided request\
        \ body properties.\n\n**Authorization:** Partially modify of review type is\
        \ accessible only by `admin` role.\n"
      operationId: "partiallyUpdateReviewType"
      parameters:
      - name: "reviewTypeId"
        in: "path"
        description: "review type id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PartiallyReviewType"
      responses:
        200:
          description: "OK - The request was successful and the updated resource is\
            \ returned."
          schema:
            $ref: "#/definitions/ReviewType"
        400:
          $ref: "#/definitions/BadRequest"
        401:
          $ref: "#/definitions/Unauthorized"
        403:
          $ref: "#/definitions/Forbidden"
        404:
          $ref: "#/definitions/NotFound"
        500:
          $ref: "#/definitions/ServerError"
      x-swagger-router-controller: "ReviewTypes"
securityDefinitions:
  Bearer:
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  NoContent:
    description: "No Content - The server has successfully fulfilled the request and\
      \ that there is no additional content to send in the response payload body.\n"
  BadRequestWithoutBody:
    description: "Bad Request - Request validation error, unable to process the request\
      \ due to an error (e.g., malformed request syntax, size too large, invalid request\
      \ message framing, or deceptive request routing).\n"
  UnauthorizedWithoutBody:
    description: "Unauthorized - Occurs when the JWT token provided is either expired\
      \ or invalid.\n"
  ForbiddenWithoutBody:
    description: "Forbidden - The request is not allowed.\n"
  NotModifiedWithoutBody:
    description: "Not Modified - Indicates that the resource has not been modified\
      \ since the last request.\n"
  ServerErrorWithoutBody:
    description: "Server Error - While handling the request something went wrong server-side.\n"
  Submission:
    allOf:
    - type: "object"
      properties:
        id:
          type: "string"
          example: "f11668564ca74c265de7009b"
          description: "The submission id."
          readOnly: true
    - $ref: "#/definitions/PartiallySubmission"
    - $ref: "#/definitions/Auditable"
    description: "The submission entity."
  PartiallySubmission:
    type: "object"
    properties:
      type:
        type: "string"
        example: "ContestSubmission"
        description: "The submission type."
      url:
        type: "string"
        example: "http://content.topcoder.com/some/path"
        description: "The submission url."
      memberId:
        type: "string"
        example: "d40796a325341bdb8c973656"
        description: "The submission member id."
      challengeId:
        type: "string"
        example: "8b1a70e7e492adc4551a0d68"
        description: "The submission challenge id."
    description: "The submission entity fields that can be partially updated."
    example:
      challengeId: "8b1a70e7e492adc4551a0d68"
      type: "ContestSubmission"
      url: "http://content.topcoder.com/some/path"
      memberId: "d40796a325341bdb8c973656"
  UpdatableSubmission:
    allOf:
    - $ref: "#/definitions/PartiallySubmission"
    description: "The submission entity fields that updates whole entity."
  ReviewSummation:
    allOf:
    - type: "object"
      properties:
        id:
          type: "string"
          example: "38c31a722f4be8d96c2bf02d"
          description: "The review summation id."
          readOnly: true
    - $ref: "#/definitions/PartiallyReviewSummation"
    - $ref: "#/definitions/Auditable"
    description: "The review summation entity."
  PartiallyReviewSummation:
    type: "object"
    properties:
      submissionId:
        type: "string"
        example: "9ff95a9cb59a973c3fd68833"
        description: "The review summation submission id."
      aggregateScore:
        type: "number"
        format: "double"
        example: 97.7999999999999971578290569595992565155029296875
        description: "The review summation aggregate score."
      scoreCardId:
        type: "string"
        example: "a6999566638fb16dbdf668fd"
        description: "The review summation score card id."
      isPassing:
        type: "boolean"
        example: true
        description: "The review summation passing boolean flag."
    description: "The review summation entity fields that can be partially updated."
    example:
      aggregateScore: 97.7999999999999971578290569595992565155029296875
      submissionId: "9ff95a9cb59a973c3fd68833"
      scoreCardId: "a6999566638fb16dbdf668fd"
      isPassing: true
  UpdatableReviewSummation:
    allOf:
    - $ref: "#/definitions/PartiallyReviewSummation"
    description: "The review summation entity fields that updates whole entity."
  Review:
    allOf:
    - type: "object"
      properties:
        id:
          type: "string"
          example: "a75529df08beff833f4c6282"
          description: "The review id."
          readOnly: true
    - $ref: "#/definitions/PartiallyReview"
    - $ref: "#/definitions/Auditable"
    description: "The review entity."
  PartiallyReview:
    type: "object"
    properties:
      score:
        type: "number"
        format: "double"
        example: 95.5
        description: "The review score."
      typeId:
        type: "string"
        example: "b0b2a8220fcd169f684093fb"
        description: "The review type id."
      reviewerId:
        type: "string"
        example: "fcadaf16dae64f5fb43bc7ee"
        description: "The review reviewer id."
      scoreCardId:
        type: "string"
        example: "0bf26a9e69e564a6c2988d12"
        description: "The review score card id."
      submissionId:
        type: "string"
        example: "255456"
        description: "The submission id."
    description: "The review entity fields that can be partially updated."
    example:
      score: 95.5
      reviewerId: "fcadaf16dae64f5fb43bc7ee"
      submissionId: "255456"
      scoreCardId: "0bf26a9e69e564a6c2988d12"
      typeId: "b0b2a8220fcd169f684093fb"
  UpdatableReview:
    allOf:
    - $ref: "#/definitions/PartiallyReview"
    description: "The review entity fields that updates whole entity."
  ReviewType:
    allOf:
    - type: "object"
      properties:
        id:
          type: "string"
          example: "928a2ec51c69ef84f5dccc4f"
          description: "The review type id."
          readOnly: true
    - $ref: "#/definitions/PartiallyReviewType"
    description: "The review type entity."
  PartiallyReviewType:
    type: "object"
    properties:
      name:
        type: "string"
        example: "Iterative Review"
        description: "The review type name."
      isActive:
        type: "boolean"
        example: true
        description: "The review type activity boolean flag."
    description: "The review type entity fields that can be partially updated."
    example:
      name: "Iterative Review"
      isActive: true
  UpdatableReviewType:
    allOf:
    - $ref: "#/definitions/PartiallyReviewType"
    description: "The review entity type fields that updates whole entity."
  Auditable:
    type: "object"
    properties:
      created:
        type: "string"
        format: "date-time"
        example: "2018-05-20T07:00:30.123Z"
        description: "The entity creation date."
        readOnly: true
      updated:
        type: "string"
        format: "date-time"
        example: "2018-06-01T07:36:28.178Z"
        description: "The entity update date."
        readOnly: true
      createdBy:
        type: "string"
        example: "admin"
        description: "The user who created the entity."
        readOnly: true
      updatedBy:
        type: "string"
        example: "admin"
        description: "The user who updated the entity."
        readOnly: true
    description: "The entity used as mark to add audit fields."
  Unauthorized:
    type: "object"
    properties:
      message:
        type: "string"
        example: "Unable to authenticate the user."
        description: "The unauthorized error message."
    description: "The unauthorized error entity."
  NotFound:
    type: "object"
    properties:
      message:
        type: "string"
        example: "A resource with the name could not be found."
        description: "The not found error message."
    description: "The not found error entity."
  NotModified:
    type: "object"
    properties:
      message:
        type: "string"
        example: "There is no need to transfer a representation of the target resource\
          \ because the request indicates that the client, which made the request\
          \ conditional, already has a valid representation."
        description: "The not modified error message."
    description: "The not modified entity."
  ServerError:
    type: "object"
    properties:
      message:
        type: "string"
        example: "Something went wrong while processing your request. We’re sorry\
          \ for the trouble. We’ve been notified of the error and will correct it\
          \ as soon as possible. Please try your request again in a moment."
        description: "The server error message."
    description: "The server error entity."
  BadRequest:
    type: "object"
    properties:
      message:
        type: "string"
        example: "Invalid input."
        description: "The bad request error message."
    description: "The bad request error entity."
  Forbidden:
    type: "object"
    properties:
      message:
        type: "string"
        example: "You are not allowed to access the request."
        description: "The forbidden error message."
    description: "The permission error entity."
  Conflict:
    type: "object"
    required:
    - "message"
    properties:
      message:
        type: "string"
        example: "Creating a resource with a name already exists."
        description: "The conflict error message."
    description: "The conflict error entity."
parameters:
  page:
    name: "page"
    in: "query"
    description: "The page number."
    required: false
    type: "integer"
    default: 1
  perPage:
    name: "perPage"
    in: "query"
    description: "The number of items to list per page."
    required: false
    type: "integer"
    default: 20
    maximum: 100
  filterSubmissionType:
    name: "type"
    in: "query"
    description: "The type filter for submissions."
    required: false
    type: "string"
  filterSubmissionUrl:
    name: "url"
    in: "query"
    description: "The url filter for submissions."
    required: false
    type: "string"
  filterSubmissionMemberId:
    name: "memberId"
    in: "query"
    description: "The member id filter for submissions."
    required: false
    type: "string"
  filterSubmissionChallengeId:
    name: "challengeId"
    in: "query"
    description: "The challenge id filter for submissions."
    required: false
    type: "string"
  filterReviewSummationSubmissionId:
    name: "submissionId"
    in: "query"
    description: "The submission id filter for review summations."
    required: false
    type: "string"
  filterReviewSummationAaggregateScore:
    name: "aggregateScore"
    in: "query"
    description: "Theaggregate score filter for review summations."
    required: false
    type: "number"
    format: "double"
  filterReviewSummationScoreCardId:
    name: "scoreCardId"
    in: "query"
    description: "The score card id filter for review summations."
    required: false
    type: "string"
  filterReviewSummationIsPassing:
    name: "isPassing"
    in: "query"
    description: "The passing boolean flag filter for review summations."
    required: false
    type: "boolean"
  filterReviewScore:
    name: "score"
    in: "query"
    description: "The score filter for reviews."
    required: false
    type: "number"
    format: "double"
  filterReviewTypeId:
    name: "typeId"
    in: "query"
    description: "The type id filter for reviews."
    required: false
    type: "string"
  filterReviewReviewerId:
    name: "reviewerId"
    in: "query"
    description: "The reviewer id filter for reviews."
    required: false
    type: "string"
  filterReviewScoreCardId:
    name: "scoreCardId"
    in: "query"
    description: "The score card id filter for reviews."
    required: false
    type: "string"
  filterReviewTypeName:
    name: "name"
    in: "query"
    description: "The name filter for review types."
    required: false
    type: "string"
  filterReviewTypeIsActive:
    name: "isActive"
    in: "query"
    description: "The active boolean flag filter for review types."
    required: false
    type: "boolean"
  IfNoneMatchParamHeader:
    name: "If-None-Match"
    in: "header"
    description: "Optional. If used in the request, the If-None-Match request header\
      \ should utilize the ETag as previously supplied in the response.\n"
    required: false
    type: "string"
  IfModifiedSinceParamHeader:
    name: "If-Modified-Since"
    in: "header"
    description: "Optional. In the subsequent request, the If-Modified-Since request\
      \ header can be populated with the previously retrieved `Last-Modified`.\n"
    required: false
    type: "string"
  reviewIdParam:
    name: "reviewId"
    in: "path"
    description: "review id"
    required: true
    type: "string"
  reviewSummationIdParam:
    name: "reviewSummationId"
    in: "path"
    description: "review summation id"
    required: true
    type: "string"
  reviewTypeIdParam:
    name: "reviewTypeId"
    in: "path"
    description: "review type id"
    required: true
    type: "string"
  submissionIdParam:
    name: "submissionId"
    in: "path"
    description: "submission id"
    required: true
    type: "string"
